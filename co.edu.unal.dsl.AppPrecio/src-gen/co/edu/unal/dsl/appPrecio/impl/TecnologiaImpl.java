/**
 * generated by Xtext 2.19.0
 */
package co.edu.unal.dsl.appPrecio.impl;

import co.edu.unal.dsl.appPrecio.AppPrecioPackage;
import co.edu.unal.dsl.appPrecio.LLave;
import co.edu.unal.dsl.appPrecio.MetodoTecnologia;
import co.edu.unal.dsl.appPrecio.Tecnologia;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tecnologia</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.edu.unal.dsl.appPrecio.impl.TecnologiaImpl#getName <em>Name</em>}</li>
 *   <li>{@link co.edu.unal.dsl.appPrecio.impl.TecnologiaImpl#getLlave <em>Llave</em>}</li>
 *   <li>{@link co.edu.unal.dsl.appPrecio.impl.TecnologiaImpl#getMetodos <em>Metodos</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TecnologiaImpl extends MinimalEObjectImpl.Container implements Tecnologia
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLlave() <em>Llave</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLlave()
   * @generated
   * @ordered
   */
  protected LLave llave;

  /**
   * The cached value of the '{@link #getMetodos() <em>Metodos</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetodos()
   * @generated
   * @ordered
   */
  protected EList<MetodoTecnologia> metodos;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TecnologiaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AppPrecioPackage.Literals.TECNOLOGIA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPrecioPackage.TECNOLOGIA__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LLave getLlave()
  {
    return llave;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLlave(LLave newLlave, NotificationChain msgs)
  {
    LLave oldLlave = llave;
    llave = newLlave;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AppPrecioPackage.TECNOLOGIA__LLAVE, oldLlave, newLlave);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLlave(LLave newLlave)
  {
    if (newLlave != llave)
    {
      NotificationChain msgs = null;
      if (llave != null)
        msgs = ((InternalEObject)llave).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AppPrecioPackage.TECNOLOGIA__LLAVE, null, msgs);
      if (newLlave != null)
        msgs = ((InternalEObject)newLlave).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AppPrecioPackage.TECNOLOGIA__LLAVE, null, msgs);
      msgs = basicSetLlave(newLlave, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AppPrecioPackage.TECNOLOGIA__LLAVE, newLlave, newLlave));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MetodoTecnologia> getMetodos()
  {
    if (metodos == null)
    {
      metodos = new EObjectContainmentEList<MetodoTecnologia>(MetodoTecnologia.class, this, AppPrecioPackage.TECNOLOGIA__METODOS);
    }
    return metodos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AppPrecioPackage.TECNOLOGIA__LLAVE:
        return basicSetLlave(null, msgs);
      case AppPrecioPackage.TECNOLOGIA__METODOS:
        return ((InternalEList<?>)getMetodos()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AppPrecioPackage.TECNOLOGIA__NAME:
        return getName();
      case AppPrecioPackage.TECNOLOGIA__LLAVE:
        return getLlave();
      case AppPrecioPackage.TECNOLOGIA__METODOS:
        return getMetodos();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AppPrecioPackage.TECNOLOGIA__NAME:
        setName((String)newValue);
        return;
      case AppPrecioPackage.TECNOLOGIA__LLAVE:
        setLlave((LLave)newValue);
        return;
      case AppPrecioPackage.TECNOLOGIA__METODOS:
        getMetodos().clear();
        getMetodos().addAll((Collection<? extends MetodoTecnologia>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AppPrecioPackage.TECNOLOGIA__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AppPrecioPackage.TECNOLOGIA__LLAVE:
        setLlave((LLave)null);
        return;
      case AppPrecioPackage.TECNOLOGIA__METODOS:
        getMetodos().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AppPrecioPackage.TECNOLOGIA__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AppPrecioPackage.TECNOLOGIA__LLAVE:
        return llave != null;
      case AppPrecioPackage.TECNOLOGIA__METODOS:
        return metodos != null && !metodos.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //TecnologiaImpl
